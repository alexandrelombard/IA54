/** 
 * 
 */
package fr.utbm.ia54

/** 
 * @author Alexandre Lombard
 * 
 */
class Vector2d extends Object {

	public var x: Double
	public var y: Double
	
	new() {
		this.x = 0d
		this.y = 0d
	}
	
	new(x: double, y: double) {
		this.x = x
		this.y = y
	}
	
	new(v: Vector2d) {
		this.x = v.x
		this.y = v.y
	}
	
	def distance(v: Vector2d): double {
		return Math.sqrt(distanceSquared(v))
	}
	
	def distanceSquared(v: Vector2d): double {
		return Math.pow(this.x - v.x, 2d) + Math.pow(this.y - v.y, 2d) 
	}
	

	def operator_plus(v1 : Vector2d) : Vector2d {
		return new Vector2d(v1.x + this.x, v1.y + this.y)
	}

	def operator_minus(v1 : Vector2d) : Vector2d {
		return new Vector2d(this.x - v1.x, this.y - v1.y)
	}

	def operator_multiply(l : Double) : Vector2d {
		return new Vector2d(this.x * l, this.y * l)
	}
	
	def operator_divide(l: Double) : Vector2d {
		return new Vector2d(this.x / l, this.y / l)
	}
	
	def length(): double {
		return this.x * this.x + this.y * this.y
	}
	
	def angle(v: Vector2d): double {
		val angle = Math.atan2(v.y, v.x) - Math.atan2(this.y, this.x)
		return angle
	}
	
	def rotate(alpha: double): Vector2d {
		return new Vector2d(x * Math.cos(alpha) - y * Math.sin(alpha), x * Math.sin(alpha) + y * Math.cos(alpha))
	}
	
	override toString : String {
		return "[" + this.x + ", " + this.y + "]"
	}
}